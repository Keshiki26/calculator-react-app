{"ast":null,"code":"var _jsxFileName = \"/Users/razbasnet/Documents/react/GitHub/react/calculator-react-app/src/Components/Calc-comps/Screen.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport Result from './Result';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Screen(props) {\n  _s();\n\n  const [calculation, setCalculation] = useState('');\n\n  const checkKeys = term => {\n    return term.split('').map((c, i) => {\n      if (c === '*') return '•';\n      if (c === '/') return '÷';\n      return c;\n    }).filter((c, i) => !(i !== 0 && /(•|÷)/.test(c))).join('');\n  };\n\n  const finalCheck = term => {\n    const checkRegex = /^([•÷0-9+-])+$/;\n    console.log(checkRegex.test(term), term);\n    return checkRegex.test(term);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    container: true,\n    className: \"screen-cont\",\n    justify: \"center\",\n    alignItems: \"flex-end\" // style={{ background: 'orange' }}\n    ,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: \"10\",\n      children: [/*#__PURE__*/_jsxDEV(Result, {\n        currentCalculation: props.currentCalculation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: e => {\n          e.preventDefault();\n\n          if (calculation !== '') {\n            props.calculate(calculation);\n          }\n        },\n        className: \"form-screen\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          color: \"secondary\",\n          autoFocus: \"true\",\n          autoComplete: \"off\",\n          required: \"true\",\n          helperText: \"\",\n          variant: \"outlined\",\n          fullWidth: \"true\",\n          value: calculation,\n          onChange: e => {\n            let term = checkKeys(e.target.value);\n            if (finalCheck(term)) setCalculation(term);\n            if (term.length < 1) setCalculation('');\n            props.calculate(term);\n          },\n          size: \"large\" // InputProps={{\n          // \tstartAdornment: (\n          // \t\t<InputAdornment position=\"start\" disablePointerEvents=\"true\">\n          // \t\t\t<CreateIcon color=\"secondary\" />\n          // \t\t</InputAdornment>\n          // \t),\n          // }}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Screen, \"FJFglf4j1fav/zxtAijcARW/SlI=\");\n\n_c = Screen;\nexport default Screen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Screen\");","map":{"version":3,"sources":["/Users/razbasnet/Documents/react/GitHub/react/calculator-react-app/src/Components/Calc-comps/Screen.js"],"names":["Grid","TextField","React","useState","Result","Screen","props","calculation","setCalculation","checkKeys","term","split","map","c","i","filter","test","join","finalCheck","checkRegex","console","log","currentCalculation","e","preventDefault","calculate","target","value","length"],"mappings":"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","sourcesContent":["import { Grid, TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport Result from './Result';\n\nfunction Screen(props) {\n\tconst [calculation, setCalculation] = useState('');\n\n\tconst checkKeys = (term) => {\n\t\treturn term\n\t\t\t.split('')\n\t\t\t.map((c, i) => {\n\t\t\t\tif (c === '*') return '•';\n\t\t\t\tif (c === '/') return '÷';\n\t\t\t\treturn c;\n\t\t\t})\n\t\t\t.filter((c, i) => !(i !== 0 && /(•|÷)/.test(c)))\n\t\t\t.join('');\n\t};\n\n\tconst finalCheck = (term) => {\n\t\tconst checkRegex = /^([•÷0-9+-])+$/;\n\t\tconsole.log(checkRegex.test(term), term);\n\t\treturn checkRegex.test(term);\n\t};\n\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tcontainer\n\t\t\tclassName=\"screen-cont\"\n\t\t\tjustify=\"center\"\n\t\t\talignItems=\"flex-end\"\n\t\t\t// style={{ background: 'orange' }}\n\t\t>\n\t\t\t<Grid item xs=\"10\">\n\t\t\t\t<Result currentCalculation={props.currentCalculation} />\n\t\t\t\t<form\n\t\t\t\t\tnoValidate\n\t\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tif (calculation !== '') {\n\t\t\t\t\t\t\tprops.calculate(calculation);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tclassName=\"form-screen\"\n\t\t\t\t>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tautoFocus=\"true\"\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\trequired=\"true\"\n\t\t\t\t\t\thelperText=\"\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tfullWidth=\"true\"\n\t\t\t\t\t\tvalue={calculation}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tlet term = checkKeys(e.target.value);\n\t\t\t\t\t\t\tif (finalCheck(term)) setCalculation(term);\n\t\t\t\t\t\t\tif (term.length < 1) setCalculation('');\n\t\t\t\t\t\t\tprops.calculate(term);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t// InputProps={{\n\t\t\t\t\t\t// \tstartAdornment: (\n\t\t\t\t\t\t// \t\t<InputAdornment position=\"start\" disablePointerEvents=\"true\">\n\t\t\t\t\t\t// \t\t\t<CreateIcon color=\"secondary\" />\n\t\t\t\t\t\t// \t\t</InputAdornment>\n\t\t\t\t\t\t// \t),\n\t\t\t\t\t\t// }}\n\t\t\t\t\t></TextField>\n\t\t\t\t</form>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nexport default Screen;\n"]},"metadata":{},"sourceType":"module"}