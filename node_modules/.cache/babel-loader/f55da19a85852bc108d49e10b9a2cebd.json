{"ast":null,"code":"var _jsxFileName = \"/Users/razbasnet/Documents/react/GitHub/react/calculator-react-app/src/Components/Calculator.js\";\nimport { Grid } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport Calc from './Calc-comps/Calc';\nimport Screen from './Calc-comps/Screen'; // const calc = equation.split('').reduce((a, c, i, arr) => {\n//     if (a[2] !== null) {\n//         //if number - parse it into a number\n//         let converted;\n//         if (/^([0-9])$/.test(c)) {\n//             converted = parseFloat(c);\n//             if (i === 0) return [converted, a[1], a[2]];\n//             if ()\n//             return\n//         }\n//         // let\n//         // switch (c) {\n//         //     case '+':\n//         //         converted = '+';\n//         //         break;\n//         //     case '-':\n//         //         converted = '-';\n//         //         break;\n//         //     case '•':\n//         //         converted = '*';\n//         //         break;\n//         //     case '÷':\n//         //         converted = '/';\n//         //         break;\n//         //     default:\n//         //         return a;\n//         // }\n//         // return a converted;\n//     }\n//     return i === arr.length - 1 ? a : a[0];\n// }, [0,0, null]);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class componentName extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentCalculation: 0\n    };\n\n    this.calculate = equation => {\n      this.setState({\n        currentCalculation: equation\n      });\n      console.log(equation);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      sm: \"10\",\n      md: \"8\",\n      lg: \"6\",\n      xl: \"4\",\n      direction: \"column\",\n      justify: \"center\",\n      alignItems: \"flex-start\",\n      item: true,\n      className: \"main-cont\",\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Screen, {\n        calculate: this.calculate,\n        currentCalculation: this.state.currentCalculation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Calc, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/razbasnet/Documents/react/GitHub/react/calculator-react-app/src/Components/Calculator.js"],"names":["Grid","React","Component","Calc","Screen","componentName","state","currentCalculation","calculate","equation","setState","console","log","render"],"mappings":";AAAA,SAASA,IAAT,QAAqB,mBAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,eAAe,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpDI,KADoD,GAC5C;AAAEC,MAAAA,kBAAkB,EAAE;AAAtB,KAD4C;;AAAA,SAEpDC,SAFoD,GAEvCC,QAAD,IAAc;AACzB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,kBAAkB,EAAEE;AAAtB,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,KALmD;AAAA;;AAOpDI,EAAAA,MAAM,GAAG;AACR,wBACC,QAAC,IAAD;AACC,MAAA,EAAE,EAAC,IADJ;AAEC,MAAA,EAAE,EAAC,GAFJ;AAGC,MAAA,EAAE,EAAC,GAHJ;AAIC,MAAA,EAAE,EAAC,GAJJ;AAKC,MAAA,SAAS,EAAC,QALX;AAMC,MAAA,OAAO,EAAC,QANT;AAOC,MAAA,UAAU,EAAC,YAPZ;AAQC,MAAA,IAAI,MARL;AASC,MAAA,SAAS,EAAC,WATX;AAUC,MAAA,SAAS,MAVV;AAAA,8BAYC,QAAC,MAAD;AACC,QAAA,SAAS,EAAE,KAAKL,SADjB;AAEC,QAAA,kBAAkB,EAAE,KAAKF,KAAL,CAAWC;AAFhC;AAAA;AAAA;AAAA;AAAA,cAZD,eAgBC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAhBD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAoBA;;AA5BmD","sourcesContent":["import { Grid } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport Calc from './Calc-comps/Calc';\nimport Screen from './Calc-comps/Screen';\n\n// const calc = equation.split('').reduce((a, c, i, arr) => {\n//     if (a[2] !== null) {\n//         //if number - parse it into a number\n//         let converted;\n//         if (/^([0-9])$/.test(c)) {\n//             converted = parseFloat(c);\n//             if (i === 0) return [converted, a[1], a[2]];\n//             if ()\n//             return\n//         }\n//         // let\n//         // switch (c) {\n//         //     case '+':\n//         //         converted = '+';\n//         //         break;\n//         //     case '-':\n//         //         converted = '-';\n//         //         break;\n//         //     case '•':\n//         //         converted = '*';\n//         //         break;\n//         //     case '÷':\n//         //         converted = '/';\n//         //         break;\n//         //     default:\n//         //         return a;\n//         // }\n//         // return a converted;\n//     }\n//     return i === arr.length - 1 ? a : a[0];\n\n// }, [0,0, null]);\nexport default class componentName extends Component {\n\tstate = { currentCalculation: 0 };\n\tcalculate = (equation) => {\n\t\tthis.setState({ currentCalculation: equation });\n\t\tconsole.log(equation);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Grid\n\t\t\t\tsm=\"10\"\n\t\t\t\tmd=\"8\"\n\t\t\t\tlg=\"6\"\n\t\t\t\txl=\"4\"\n\t\t\t\tdirection=\"column\"\n\t\t\t\tjustify=\"center\"\n\t\t\t\talignItems=\"flex-start\"\n\t\t\t\titem\n\t\t\t\tclassName=\"main-cont\"\n\t\t\t\tcontainer\n\t\t\t>\n\t\t\t\t<Screen\n\t\t\t\t\tcalculate={this.calculate}\n\t\t\t\t\tcurrentCalculation={this.state.currentCalculation}\n\t\t\t\t/>\n\t\t\t\t<Calc />\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}