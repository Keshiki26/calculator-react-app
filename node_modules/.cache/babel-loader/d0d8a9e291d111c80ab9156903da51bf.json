{"ast":null,"code":"var _jsxFileName = \"/Users/razbasnet/Documents/react/GitHub/react/calculator-react-app/src/Components/Calculator.js\";\nimport { Grid } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport Calc from './Calc-comps/Calc';\nimport Screen from './Calc-comps/Screen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class componentName extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.calculate = equation => {\n      // const calc = equation.split('').reduce((a, c, i, arr) => {\n      //     if (a[2] !== null) {\n      //         //if number - parse it into a number\n      //         let converted;\n      //         if (/^([0-9])$/.test(c)) {\n      //             converted = parseFloat(c);\n      //             if (i === 0) return [converted, a[1], a[2]];\n      //             if ()\n      //             return\n      //         }\n      //         // let\n      //         // switch (c) {\n      //         //     case '+':\n      //         //         converted = '+';\n      //         //         break;\n      //         //     case '-':\n      //         //         converted = '-';\n      //         //         break;\n      //         //     case '•':\n      //         //         converted = '*';\n      //         //         break;\n      //         //     case '÷':\n      //         //         converted = '/';\n      //         //         break;\n      //         //     default:\n      //         //         return a;\n      //         // }\n      //         // return a converted;\n      //     }\n      //     return i === arr.length - 1 ? a : a[0];\n      // }, [0,0, null]);\n      console.log(equation);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      sm: \"10\",\n      md: \"8\",\n      lg: \"6\",\n      xl: \"4\",\n      direction: \"column\",\n      justify: \"center\",\n      alignItems: \"flex-start\",\n      item: true,\n      className: \"main-cont\",\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Screen, {\n        calculate: this.calculate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Calc, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/razbasnet/Documents/react/GitHub/react/calculator-react-app/src/Components/Calculator.js"],"names":["Grid","React","Component","Calc","Screen","componentName","calculate","equation","console","log","render"],"mappings":";AAAA,SAASA,IAAT,QAAqB,mBAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,eAAe,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SACpDI,SADoD,GACvCC,QAAD,IAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,KAnCmD;AAAA;;AAqCpDG,EAAAA,MAAM,GAAG;AACR,wBACC,QAAC,IAAD;AACC,MAAA,EAAE,EAAC,IADJ;AAEC,MAAA,EAAE,EAAC,GAFJ;AAGC,MAAA,EAAE,EAAC,GAHJ;AAIC,MAAA,EAAE,EAAC,GAJJ;AAKC,MAAA,SAAS,EAAC,QALX;AAMC,MAAA,OAAO,EAAC,QANT;AAOC,MAAA,UAAU,EAAC,YAPZ;AAQC,MAAA,IAAI,MARL;AASC,MAAA,SAAS,EAAC,WATX;AAUC,MAAA,SAAS,MAVV;AAAA,8BAYC,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAE,KAAKJ;AAAxB;AAAA;AAAA;AAAA;AAAA,cAZD,eAaC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAbD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAiBA;;AAvDmD","sourcesContent":["import { Grid } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport Calc from './Calc-comps/Calc';\nimport Screen from './Calc-comps/Screen';\n\nexport default class componentName extends Component {\n\tcalculate = (equation) => {\n\t\t// const calc = equation.split('').reduce((a, c, i, arr) => {\n\t\t//     if (a[2] !== null) {\n\t\t//         //if number - parse it into a number\n\t\t//         let converted;\n\t\t//         if (/^([0-9])$/.test(c)) {\n\t\t//             converted = parseFloat(c);\n\t\t//             if (i === 0) return [converted, a[1], a[2]];\n\t\t//             if ()\n\t\t//             return\n\t\t//         }\n\t\t//         // let\n\t\t//         // switch (c) {\n\t\t//         //     case '+':\n\t\t//         //         converted = '+';\n\t\t//         //         break;\n\t\t//         //     case '-':\n\t\t//         //         converted = '-';\n\t\t//         //         break;\n\t\t//         //     case '•':\n\t\t//         //         converted = '*';\n\t\t//         //         break;\n\t\t//         //     case '÷':\n\t\t//         //         converted = '/';\n\t\t//         //         break;\n\t\t//         //     default:\n\t\t//         //         return a;\n\t\t//         // }\n\t\t//         // return a converted;\n\t\t//     }\n\t\t//     return i === arr.length - 1 ? a : a[0];\n\n\t\t// }, [0,0, null]);\n\t\tconsole.log(equation);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Grid\n\t\t\t\tsm=\"10\"\n\t\t\t\tmd=\"8\"\n\t\t\t\tlg=\"6\"\n\t\t\t\txl=\"4\"\n\t\t\t\tdirection=\"column\"\n\t\t\t\tjustify=\"center\"\n\t\t\t\talignItems=\"flex-start\"\n\t\t\t\titem\n\t\t\t\tclassName=\"main-cont\"\n\t\t\t\tcontainer\n\t\t\t>\n\t\t\t\t<Screen calculate={this.calculate} />\n\t\t\t\t<Calc />\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}